<!--
  ~ Copyright (c) 2023, APT Group, Department of Computer Science,
  ~  The University of Manchester.
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->

<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>uk.ac.manchester.beehive.TornadoInsight</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>TornadoInsight</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="info@tornadovm.org" url="https://www.tornadovm.org/contact-us">Beehive Lab</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[TornadoInsight is an open source IntelliJ plugin that aims to enhance the experience of developers when working with
<a href="https://github.com/beehive-lab/TornadoVM">TornadoVM</a>.
<ul>
    <li>TornadoInsight provides a built-in on-the-fly static checker, empowering developers to identify unsupported
        Java features in TornadoVM and understand the reasons behind these limitations.</li>
    <li>TornadoInsight introduces a dynamic testing framework that enables developers to easily test individual TornadoVM tasks.
        It automatically wraps TornadoVM tasks, invoking the native TornadoVM runtime on the developers' machines for seamless
        debugging and testing.</li>
</ul>
<br/>
<h2>Getting started</h2>

TornadoInsight is available for versions 2022.3 and higher of compatible JetBrains IDEs.
It invokes Java and TornadoVM at runtime on the computer where the plugin is installed, and therefore,
developers must have installed Java and TornadoVM prior to using the plugin:
<ul>
    <li><a href="https://github.com/beehive-lab/TornadoVM">TornadoVM</a> >= v1.0</li>
    <li>JDK >= 21</li>
</ul>

The dynamic inspection feature of TornadoInsight is configured after the installation of the plugin, as follows:
<ul>
    <li>Navigate to "Settings" and select "TornadoInsight" from the menu.</li>
    <li>Developers should configure the TornadoVM root directory (i.e. the path to the TornadoVM cloned repository)
        and select a JDK which should be >= JDK 21. Additionally, developers should indicate a tentative "array size"
        that can be used by TornadoInsight to set the size of the input and output arrays of a TornadoVM task.</li>
</ul>

For more information, please follow our <a href="https://github.com/beehive-lab/tornado-insight">documentation</a>.
<br/>
Enjoy and share your feedback!
]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.java</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">

        <localInspection language="JAVA"
                         displayName="Data type check"
                         groupPath="Java"
                         groupName="Java issues"
                         shortName="DataTypeInspection"
                         level="ERROR"
                         enabledByDefault="true"
                         implementationClass="uk.ac.manchester.beehive.tornado.plugins.inspector.DataTypeInspection"/>
        <localInspection language="JAVA"
                         displayName="Recursion check"
                         groupPath="Java"
                         groupName="Java issues"
                         shortName="RecursionInspection"
                         level="ERROR"
                         enabledByDefault="true"
                         implementationClass="uk.ac.manchester.beehive.tornado.plugins.inspector.RecursionInspection"/>
        <localInspection language="JAVA"
                         displayName="Method Throw check"
                         groupPath="Java"
                         groupName="Java issues"
                         shortName="ThrowInspection"
                         level="ERROR"
                         enabledByDefault="true"
                         implementationClass="uk.ac.manchester.beehive.tornado.plugins.inspector.ThrowInspection"/>
        <localInspection language="JAVA"
                         displayName="System call check"
                         groupPath="Java"
                         groupName="Java issues"
                         shortName="SystemCallInspection"
                         level="ERROR"
                         enabledByDefault="true"
                         implementationClass="uk.ac.manchester.beehive.tornado.plugins.inspector.SystemCallInspection"/>
        <localInspection language="JAVA"
                         displayName="Static Taskgraph check"
                         groupPath="Java"
                         groupName="Java issues"
                         shortName="StaticTaskGraphInspection"
                         level="ERROR"
                         enabledByDefault="true"
                         implementationClass="uk.ac.manchester.beehive.tornado.plugins.inspector.StaticTaskGraphInspection"/>
        <localInspection language="JAVA"
                         displayName="Assert statement check"
                         groupPath="Java"
                         groupName="Java issues"
                         shortName="AssertInspection"
                         level="ERROR"
                         enabledByDefault="true"
                         implementationClass="uk.ac.manchester.beehive.tornado.plugins.inspector.AssertInspection"/>
        <localInspection implementationClass="uk.ac.manchester.beehive.tornado.plugins.inspector.ExternalLibraryInspection"
                         language="JAVA"
                         displayName="External library check"
                         groupPath="Java"
                         groupName="Java issues"
                         shortName="ExternalInspection"
                         level="ERROR"
                         enabledByDefault="true">

        </localInspection>
        <toolWindow factoryClass="uk.ac.manchester.beehive.tornado.plugins.ui.toolwindow.TornadoSideWindow" id="TornadoVM" anchor="right" icon="TornadoIcons.TornadoIcon" />
        <applicationConfigurable instance="uk.ac.manchester.beehive.tornado.plugins.ui.settings.TornadoSettingConfiguration"
                                 displayName="TornadoInsight"/>
        <applicationService serviceImplementation="uk.ac.manchester.beehive.tornado.plugins.ui.settings.TornadoSettingState"/>
        <psi.treeChangeListener implementation="uk.ac.manchester.beehive.tornado.plugins.listener.PsiChangeListener"/>
        <toolWindow factoryClass="uk.ac.manchester.beehive.tornado.plugins.ui.console.ConsoleWindowFactory" id="TornadoInsight Console" anchor="bottom"/>
        <errorHandler implementation="uk.ac.manchester.beehive.tornado.plugins.error.ErrorSubmitter"/>
        <postStartupActivity implementation="uk.ac.manchester.beehive.tornado.plugins.listener.TornadoSettingListener"/>
    </extensions>
    <actions>
        <group id="tornado.bar">
            <action id="tornado.refresh" class="uk.ac.manchester.beehive.tornado.plugins.service.RefreshAction" text="Refresh" description="Refresh"
                    icon="AllIcons.Actions.Refresh"/>
            <action id="tornado.runInspection" class="uk.ac.manchester.beehive.tornado.plugins.service.RunInspectionAction"
                    text="Run Dynamic Inspection" description="Run dynamic inspection" icon="AllIcons.Actions.Execute"/>
            <action id="RunPythonAnalysis"
                    class="uk.ac.manchester.beehive.tornado.plugins.service.BytecodeAnalyzerAction"
                    text="Analyze TornadoVM Bytecodes"
                    description="Runs bytecode analysis via external Python script" icon="AllIcons.Actions.DependencyAnalyzer"/>
            <separator/>
            <action id="tornado.settings" class="uk.ac.manchester.beehive.tornado.plugins.service.SettingsAction"
                    text="Settings" description="Settings" icon="AllIcons.General.GearPlain"/>
            <action id="tornado.doc" class="uk.ac.manchester.beehive.tornado.plugins.service.OpenTornadoDocsAction"
                    text="TornadoVM Documentation" description="TornadoVM documentation" icon="AllIcons.Toolwindows.Documentation"/>
        </group>
    </actions>
    <projectListeners>
        <listener class="uk.ac.manchester.beehive.tornado.plugins.listener.ToolWindowOpen"
                  topic="com.intellij.openapi.wm.ex.ToolWindowManagerListener"/>
        <listener class="uk.ac.manchester.beehive.tornado.plugins.listener.EditorSwitch"
                  topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"/>
    </projectListeners>
</idea-plugin>
